
# see https://github.com/CppCXY/EmmyLuaCodeStyle
[*.lua]
# optional space/tab
indent_style = space
# if indent_style is space, this is valid
indent_size = 4
# if indent_style is tab, this is valid
tab_width = 8
continuation_indent_size = 4
align_call_args = false
keep_one_space_between_call_args_and_bracket = false
align_function_define_params = true
keep_one_space_between_table_and_bracket = true
align_table_field_to_first_field = true
continuous_assign_statement_align_to_equal_sign = true
continuous_assign_table_field_align_to_equal_sign = true
# optional crlf/lf
end_of_line = crlf

# The following configuration supports three expressions
# minLine:${n}   
# keepLine   
# KeepLine:${n}

keep_line_after_if_statement = minLine:1
keep_line_after_do_statement = minLine:1
keep_line_after_while_statement = minLine:1
keep_line_after_repeat_statement = minLine:1
keep_line_after_for_statement = minLine:1
keep_line_after_local_or_assign_statement = keepLine
keep_line_after_function_define_statement = keepLine:1

# the following is code diagnostic options
enable_check_codestyle = true
# this mean utf8 length
max_line_length = 120
# this will check text end with new line(format always end with new line)
insert_final_newline = true


enable_name_style_check = false
# the following is name style check rule 
# base option off/camel_case/snake_case/upper_snake_case/pascal_case/same(filename/first_param/'<const string>', snake_case/pascal_case/camel_case)
# all option can use '|' represent or 
# for example:
# snake_case | upper_snake_case
# same(first_param, snake_case)
# same('m')
local_name_define_style = snake_case
function_param_name_style = snake_case
function_name_define_style = snake_case
local_function_name_define_style = snake_case
table_field_name_define_style = snake_case
global_variable_name_define_style = snake_case|upper_snake_case
module_name_define_style = same('m')|same(filename, snake_case)
require_module_name_style = same(first_param, snake_case)
class_name_define_style = same(filename, snake_case)
